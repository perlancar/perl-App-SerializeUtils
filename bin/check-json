#!perl

# DATE
# VERSION

use 5.010;
use strict;
use warnings;

use Getopt::Long;

my $json_mod = '';
GetOptions(
    'pp' => sub { $json_mod = 'PP' },
    'xs' => sub { $json_mod = 'XS' },
    'help' => sub {
        print "Usage: check-json [--pp|--xs] <file>\n";
        exit 0;
    },
);

my $json;
if ($json_mod eq 'PP') {
    require JSON::PP; $json = JSON::PP->new->allow_nonref;
} elsif ($json_mod eq 'XS') {
    require Cpanel::JSON::XS; $json = Cpanel::JSON::XS->new->allow_nonref;
} else {
    require JSON::MaybeXS; $json = JSON::MaybeXS->new->allow_nonref;
}

eval {
    undef $/;
    $json->decode(~~<>);
};

die $@ if $@;

1;
#ABSTRACT: Check JSON syntax
#PODNAME:

=head1 DESCRIPTION

Check JSON syntax. Prints nothing if JSON syntax is okay.


=head1 OPTIONS

=over

=item * --pp

Force using a PP module (currently L<JSON::PP>) instead of the default
L<JSON::MaybeXS>.

=item * --xs

Force using an XS module (currently L<Cpanel::JSON::XS>) instead of
the default L<JSON::MaybeXS>.

=back

=cut
